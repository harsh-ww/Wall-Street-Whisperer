from flask import Flask, request, jsonify, Blueprint
import psycopg2
import logging
from connect import get_db_connection

track_blueprint = Blueprint('track', __name__)

# API endpoint to track a company
@track_blueprint.route('/track', methods=['POST'])
def track_company():
    data = request.get_json()

    ticker_code = data.get('ticker_code')
    company_name = data.get('company_name')
    common_name = data.get('common_name')
    
    if not ticker_code:
        return jsonify({'error': 'Ticker code is required'}), 400
    if not company_name:
        return jsonify({'error': 'Company name is required'}), 400
    if not common_name:
        return jsonify({'error': 'Common name is required'}), 400
    
    try:
        # Connect to the database
        conn = get_db_connection()
        cur = conn.cursor()

        # Check if the company already exists
        cur.execute("SELECT * FROM company WHERE TickerCode = %s", (ticker_code,))
        existing_company = cur.fetchone()

        if existing_company:
            return jsonify({'error': 'Company already tracked'}), 400

        # Create a new company
        cur.execute("INSERT INTO company (CompanyName, CommonName, TickerCode) VALUES (%s, %s, %s) RETURNING CompanyID",
                    (company_name, common_name, ticker_code))
        new_company_id = cur.fetchone()[0]  # Return the company id generated by the insertion

        # Save the company to the tracked companies table
        # This should be modified to be added into the user_follows_company table.
        # cur.execute("INSERT INTO tracked_company (company_id) VALUES (%s)", (new_company_id,))

        # Commit changes
        conn.commit()
        return jsonify({'message': 'Company successfully tracked'}), 201

    except psycopg2.DatabaseError as error:
        error_message = str(error)
        logging.exception("Failed to track company.")
        return jsonify({'error': 'Failed to track company:'+ error_message}), 500

    finally:
        cur.close()
        conn.close()